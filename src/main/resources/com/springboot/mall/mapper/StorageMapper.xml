<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.mall.mapper.StorageMapper">
  <resultMap id="StorageMapper" type="com.springboot.mall.domain.Storage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap id="storageMap" type="com.springboot.mall.domain.Storage">
    <result column="id" property="id"/>
    <result column="sKey" property="key"/>
    <result column="sName" property="name"/>
    <result column="type" property="type"/>
    <result column="size" property="size"/>
    <result column="url" property="url"/>
    <result column="add_time" property="addTime"/>
    <result column="update_time" property="updateTime"/>
    <result column="deleted" property="deleted"/>
  </resultMap>
  <!--条件查看storage-->
  <select id="getStorage" resultMap="storageMap">
      select id,
             cskaoyan_mall_storage.key sKey,
             cskaoyan_mall_storage.name sName,
             cskaoyan_mall_storage.type,
             cskaoyan_mall_storage.size,
              url,
              add_time,
              update_time,
              deleted
      from cskaoyan_mall_storage
      <where>
         1=1
         <if test="key!=null">
            and `key` like concat('%',#{key},'%')
         </if>
         <if test="name!=null">
            and `name` like concat('%',#{name},'%')
         </if>
      </where>
      order by #{sort} #{order}
  </select>
  <!--update-->
  <update id="update">
     update cskaoyan_mall_storage
     set `name` = #{storage.name}
     where id = #{storage.id}
  </update>
  <!--delete-->
  <delete id="delete">
     delete from
     cskaoyan_mall_storage
     where id = #{storage.id}
  </delete>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, key, name, type, size, url, add_time, update_time, deleted
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cskaoyan_mall_storage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springboot.mall.domain.StorageExample">
    delete from cskaoyan_mall_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springboot.mall.domain.Storage">
    insert into cskaoyan_mall_storage (id, key, name, 
      type, size, url, add_time, 
      update_time, deleted)
    values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.mall.domain.Storage">
    insert into cskaoyan_mall_storage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="key != null">
        key,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <sql id="StorageList">
  id, `key`, name, type, size, url, add_time, update_time, deleted
</sql>
  <insert id="insertStorage">
    <!--<selectKey keyProperty="id" order="AFTER" resultType="_int">
      SELECT LAST_INSERT_ID() as id
    </selectKey>-->
    insert into cskaoyan_mall_storage ( <include refid="StorageList"/> ) value
     (null,#{storage.key},#{storage.name},#{storage.type},#{storage.size},#{storage.url},now(),now(),0)
  </insert>

  <select id="selectStorageByUrl" resultMap="StorageMapper">
    select <include refid="StorageList"/> from cskaoyan_mall_storage where url = #{url}
  </select>
</mapper>